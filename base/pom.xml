<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>base</artifactId>
    <packaging>pom</packaging>
    <name>tDAR (base)</name>

    <properties>
        <!-- see http://tomcat.apache.org/whichversion.html for compatibility 
            with tomcat ; jetty: http://wiki.eclipse.org/Jetty/Starting/Jetty_Version_Comparison_Table -->
        <testChangeLog>changelog.xml</testChangeLog>
    </properties>
    <parent>
        <groupId>org.tdar</groupId>
        <artifactId>parent</artifactId>
         <version>18.0.0-RADIOCARBON-BOOTSTRAP-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <build>
        <finalName>tdar-base</finalName>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>process-resources</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <attachToTest>true</attachToTest>
                            <attachToMain>true</attachToMain>
                            <resourceBundles>
                                <resourceBundle>org.tdar:locales:${project.version}</resourceBundle>
                            </resourceBundles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>process-test-resources</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <!--FIXME: instead of this conditional skip, would it be better to place this entire execution node inside the test profile node (TDAR-5160) -->
                            <skip>${skipTests}</skip>
                            <attachToTest>false</attachToTest>
                            <attachToMain>false</attachToMain>
                            <includeScope>test</includeScope>
                            <outputDirectory>target/test-resources</outputDirectory>
                            <resourceBundles>
                                <resourceBundle>org.tdar:test-resources:${project.version}</resourceBundle>
                            </resourceBundles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>process-database-resources</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <attachToMain>false</attachToMain>
                            <attachToTest>false</attachToTest>
                            <outputDirectory>target/</outputDirectory>
                            <resourceBundles>
                                <resourceBundle>org.tdar:database:${project.version}</resourceBundle>
                            </resourceBundles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>

                    <!-- <executable>${env.JAVA_HOME_7}/bin/javac</executable> <fork>true</fork> -->

                    <!-- Welcome to Maven World, where 'no' means 'yes' and 'yes' means
                        'no'! More info: https://jira.codehaus.org/browse/MCOMPILER-205 http://jira.codehaus.org/browse/MCOMPILER-209 -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                     <compilerArgs>
                <arg>-Xlint:all</arg>
                </compilerArgs>
                <!-- comment this out for java9 -->
               <compilerId>eclipse</compilerId>
                </configuration>
                <!-- comment this out for java9 -->
                <dependencies>
                     <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-compiler-eclipse</artifactId>
                        <version>2.8</version>
                      </dependency>
                </dependencies> 
                <!-- /comment this out for java9 -->
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-version}</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <failOnError>false</failOnError>
                    <findbugsXmlOutput>false</findbugsXmlOutput>
                    <onlyAnalyze>org.tdar.*</onlyAnalyze>
                    <includeTests>false</includeTests>
                    <excludeFilterFile>src/main/resources/validation_tools/findbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${site-maven-version}</version>
                <dependencies>
                    <dependency>
                        <groupId>commons-lang</groupId>
                        <artifactId>commons-lang</artifactId>
                        <version>2.6</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${clean-maven-version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${deploy-maven-version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${install-maven-version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${resources-maven-version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <enableRSS>false</enableRSS>
                    <includes>**\/*.java</includes>
                    <enableRulesSummary>true</enableRulesSummary>
                    <configLocation>src/main/resources/validation_tools/check_style.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                    only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <groupId>org.apache.maven.plugins</groupId>
                    <version>${antrun.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>selenium-maven-plugin</artifactId>
                    <version>2.3</version>
                </plugin>

                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>properties-maven-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>read-project-properties</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>keytool-maven-plugin</artifactId>
                                        <versionRange>[1.0,)</versionRange>
                                        <goals>
                                            <goal>generateKeyPair</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.3,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.liquibase</groupId>
                                        <artifactId>
                                            liquibase-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [3.2.2,)
                                        </versionRange>
                                        <goals>
                                            <goal>update</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>liquibase-export</id>
            <!-- mvn -Pliquibase-export clean compile -->
            <build>
                <defaultGoal>liquibase:generateChangeLog</defaultGoal>
                <resources>
                    <resource>
                        <!-- switch filtering off for all but the desired 
                            set -->
                        <filtering>false</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <excludes>
                            <exclude>hibernate.properties</exclude>
                            <exclude>common.json</exclude>
                            <exclude>liquibase.properties</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <!-- And on for the set of files -->
                        <!-- Having to do it as mutually exclusive but that's 
                            how Maven works -->
                        <!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
                        <filtering>true</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <includes>
                            <include>liquibase.properties</include>
                            <include>hibernate.properties</include>
                        </includes>
                    </resource>
                </resources>
                <filters>
                    <filter>${basedir}/src/main/resources/hibernate.properties</filter>
                    <filter>${basedir}/src/main/resources/liquibase.properties</filter>
                </filters>
                <plugins>
                    <plugin>
                        <artifactId>maven-remote-resources-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>process-database-resources</id>
                                <goals>
                                    <goal>process</goal>
                                </goals>
                                <configuration>
                                    <attachToMain>false</attachToMain>
                                    <attachToTest>false</attachToTest>
                                    <outputDirectory>target/</outputDirectory>
                                    <resourceBundles>
                                        <resourceBundle>org.tdar:database:${project.version}</resourceBundle>
                                    </resourceBundles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0-alpha-2</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>src/main/resources/hibernate.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration>
                            <username>${javax.persistence.jdbc.user}</username>
                            <password>${javax.persistence.jdbc.password}</password>
                            <url>${javax.persistence.jdbc.url}</url>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <outputChangeLogFile>changelog-setup.xml</outputChangeLogFile>
                            <diffTypes>tables,views,columns, indexes,
                                foreignkeys,
                                primarykeys,
                                uniqueconstraints,data,sequence</diffTypes>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>generateChangeLog</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>liquibase-setup-dev-instance</id>
            <!-- mvn -Pliquibase-setup-dev-instance clean compile -->
            <build>
                <defaultGoal>liquibase:update</defaultGoal>
                <resources>
                    <resource>
                        <!-- switch filtering off for all but the desired 
                            set -->
                        <filtering>false</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <excludes>
                            <exclude>hibernate.properties</exclude>
                            <exclude>common.json</exclude>
                            <exclude>liquibase.properties</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <!-- And on for the set of files -->
                        <!-- Having to do it as mutually exclusive but that's 
                            how Maven works -->
                        <!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
                        <filtering>true</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <includes>
                            <include>liquibase.properties</include>
                            <include>hibernate.properties</include>
                        </includes>
                    </resource>
                </resources>
                <filters>
                    <filter>${basedir}/src/main/resources/hibernate.properties</filter>
                    <filter>${basedir}/src/main/resources/liquibase.properties</filter>
                </filters>
                <plugins>
                    <plugin>
                        <artifactId>maven-remote-resources-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>process-database-resources</id>
                                <goals>
                                    <goal>process</goal>
                                </goals>
                                <configuration>
                                    <attachToMain>false</attachToMain>
                                    <attachToTest>false</attachToTest>
                                    <outputDirectory>target/</outputDirectory>
                                    <resourceBundles>
                                        <resourceBundle>org.tdar:database:${project.version}</resourceBundle>
                                    </resourceBundles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0-alpha-2</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <!--<file>src/main/resources/hibernate.properties</file>-->
                                        <file>${basedir}/src/main/resources/hibernate.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration>
                            <username>${javax.persistence.jdbc.user}</username>
                            <password>${javax.persistence.jdbc.password}</password>
                            <url>${javax.persistence.jdbc.url}</url>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <changeLogFile>target/liquibase-test/setup-dev-instance.xml</changeLogFile>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>liquibase-setup-production-instance</id>
            <!-- mvn -Pliquibase-export clean compile -->
            <build>
                <defaultGoal>liquibase:update</defaultGoal>
                <resources>
                    <resource>
                        <!-- switch filtering off for all but the desired 
                            set -->
                        <filtering>false</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <excludes>
                            <exclude>hibernate.properties</exclude>
                            <exclude>common.json</exclude>
                            <exclude>liquibase.properties</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <!-- And on for the set of files -->
                        <!-- Having to do it as mutually exclusive but that's 
                            how Maven works -->
                        <!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
                        <filtering>true</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <includes>
                            <include>liquibase.properties</include>
                            <include>hibernate.properties</include>
                        </includes>
                    </resource>
                </resources>
                <filters>
                    <filter>${basedir}/src/main/resources/hibernate.properties</filter>
                    <filter>${basedir}/src/main/resources/liquibase.properties</filter>
                </filters>
                <plugins>
                    <plugin>
                        <artifactId>maven-remote-resources-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>process-database-resources</id>
                                <goals>
                                    <goal>process</goal>
                                </goals>
                                <configuration>
                                    <attachToMain>false</attachToMain>
                                    <attachToTest>false</attachToTest>
                                    <outputDirectory>target/</outputDirectory>
                                    <resourceBundles>
                                        <resourceBundle>org.tdar:database:${project.version}</resourceBundle>
                                    </resourceBundles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0-alpha-2</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>src/main/resources/hibernate.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration>
                            <username>${javax.persistence.jdbc.user}</username>
                            <password>${javax.persistence.jdbc.password}</password>
                            <url>${javax.persistence.jdbc.url}</url>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <changeLogFile>target/liquibase/setup-production-instance.xml</changeLogFile>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- this profile is "temporary" and is not run in isolation. 
                It should be run along with jetty:run which will setup the properties files 
                correctly. Eventually, this will be built into the default "jetty" launch 
                process and "deploy" process. Enabling this profile activates the liquibase.properties 
                and sets skipUpgradeLiquibase="false" which means that liquibase is processed 
                during the setup process. -->
            <id>liquibase</id>
            <build>
                <resources>
                    <resource>
                        <!-- switch filtering off for all but the desired 
                            set -->
                        <filtering>false</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <excludes>
                            <exclude>hibernate.properties</exclude>
                            <exclude>common.json</exclude>
                            <exclude>liquibase.properties</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <!-- And on for the set of files -->
                        <!-- Having to do it as mutually exclusive but that's 
                            how Maven works -->
                        <!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
                        <filtering>true</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <includes>
                            <include>liquibase.properties</include>
                            <include>hibernate.properties</include>
                        </includes>
                    </resource>
                </resources>
                <filters>
                    <filter>${basedir}/src/main/resources/hibernate.properties</filter>
                    <filter>${basedir}/src/main/resources/liquibase.properties</filter>
                </filters>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${basedir}/src/main/resources/hibernate.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <skipUpgradeLiquibase>false</skipUpgradeLiquibase>
            </properties>
        </profile>

        <profile>
            <!-- this profile is intended to reset liquibase's change log 
                (if something gets out of sync) Enabling this profile activates the liquibase.properties 
                and sets skipUpgradeLiquibase="false" which means that liquibase is processed 
                during the setup process. -->
            <id>changelogSync</id>
            <build>
                <defaultGoal>liquibase:changelogSync</defaultGoal>
                <resources>
                    <resource>
                        <!-- switch filtering off for all but the desired 
                            set -->
                        <filtering>false</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <excludes>
                            <exclude>hibernate.properties</exclude>
                            <exclude>common.json</exclude>
                            <exclude>liquibase.properties</exclude>
                        </excludes>
                    </resource>
                    <resource>
                        <!-- And on for the set of files -->
                        <!-- Having to do it as mutually exclusive but that's 
                            how Maven works -->
                        <!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
                        <filtering>true</filtering>
                        <directory>${basedir}/src/main/resources</directory>
                        <includes>
                            <include>liquibase.properties</include>
                            <include>hibernate.properties</include>
                        </includes>
                    </resource>
                </resources>
                <filters>
                    <filter>${basedir}/src/main/resources/hibernate.properties</filter>
                    <filter>${basedir}/src/main/resources/liquibase.properties</filter>
                </filters>
                <plugins>
                    <plugin>
                        <artifactId>maven-remote-resources-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>process-database-resources</id>
                                <goals>
                                    <goal>process</goal>
                                </goals>
                                <configuration>
                                    <attachToMain>false</attachToMain>
                                    <attachToTest>false</attachToTest>
                                    <outputDirectory>target/</outputDirectory>
                                    <resourceBundles>
                                        <resourceBundle>org.tdar:database:${project.version}</resourceBundle>
                                    </resourceBundles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0-alpha-2</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${basedir}/src/main/resources/hibernate.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration>
                            <username>${javax.persistence.jdbc.user}</username>
                            <password>${javax.persistence.jdbc.password}</password>
                            <url>${javax.persistence.jdbc.url}</url>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <changeLogFile>target/liquibase/changelog.xml</changeLogFile>
                            <clearCheckSums>true</clearCheckSums>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>changelogSync</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <!-- <skipUpgradeLiquibase>false</skipUpgradeLiquibase> -->
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <use.test.classpath>true</use.test.classpath>
                <skipCloverSetup>false</skipCloverSetup>
                <webapp.deploy.dir>target/generated/webapp-test</webapp.deploy.dir>
                <setupDb>true</setupDb>
            </properties>
            <build>
                <plugins>
                        <plugin>
                            <artifactId>maven-remote-resources-plugin</artifactId>
                            <version>1.5</version>
                            <executions>
                                <execution>
                                    <id>process-test-resources</id>
                                    <goals>
                                        <goal>process</goal>
                                    </goals>
                                    <configuration>
                                        <!--FIXME: instead of this conditional skip, would it be better to place this entire execution node inside the test profile node (TDAR-5160) -->
                                        <skip>${skipTests}</skip>
                                        <attachToTest>false</attachToTest>
                                        <attachToMain>false</attachToMain>
                                        <includeScope>test</includeScope>
                                        <outputDirectory>target/test-resources</outputDirectory>
                                        <resourceBundles>
                                            <resourceBundle>org.tdar:test-resources:${project.version}</resourceBundle>
                                        </resourceBundles>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.openclover</groupId>
                            <artifactId>clover-maven-plugin</artifactId>
                            <version>${clover.version}</version>
                            <configuration>
                                <includes>
                                    <include>**/*.java</include>
                                </includes>
                                <excludes>
                                    <exclude>**/PDFMergerUtility.java</exclude>
                                </excludes>
                                <scope>test</scope>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>org.openclover</groupId>
                                    <artifactId>clover</artifactId>
                                    <version>${clover.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>

                        <plugin>
                            <groupId>org.liquibase</groupId>
                            <artifactId>liquibase-maven-plugin</artifactId>
                            <configuration>
                                <username>${javax.persistence.jdbc.user}</username>
                                <password>${javax.persistence.jdbc.password}</password>
                                <url>${javax.persistence.jdbc.url}</url>
                                <driver>${javax.persistence.jdbc.driver}</driver>
                                <verbose>false</verbose>
                                <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                            </configuration>
                            <executions>
                                <execution>
                                    <!--liquibase has problems dropping sequences and views in proper order, so we do it manually here -->
                                    <id>pre-dropall</id>
                                    <configuration>
                                        <!--  NOTE CHANGELOGS can VARY so that we can load the integration data or not
                                        changelog.xml or changelog-integration.xml -->
                                        <changeLogFile>target/liquibase-test/pre-dropall.xml</changeLogFile>
                                        <skip>${skipTestLiquibase}</skip>
                                        <logging>warning</logging>
                                    </configuration>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>update</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <!-- in the "test" context, drop the database contents, 
                                        and reload it -->
                                    <id>test-liquibase</id>
                                    <configuration>
                                        <!--  NOTE CHANGELOGS can VARY so that we can load the integration data or not 
                                        changelog.xml or changelog-integration.xml -->
                                        <changeLogFile>target/liquibase-test/${testChangeLog}</changeLogFile>
                                        <skip>${skipTestLiquibase}</skip>
                                        <logging>warning</logging>
                                    </configuration>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>dropAll</goal>
                                        <goal>update</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>upgrade-liquibase</id>
                                    <!-- if the liquibase profile is active (default 
                                        context) run the upgrade -->
                                    <configuration>
                                        <changeLogFile>target/liquibase/changelog.xml</changeLogFile>
                                        <skip>${skipUpgradeLiquibase}</skip>
                                    </configuration>
                                    <phase>process-resources</phase>
                                    <goals>
                                        <goal>update</goal>
                                    </goals>
                                </execution>

                                <execution>
                                    <id>cleanup-database</id>
                                    <configuration>
                                        <changeLogFile>target/liquibase-test/post-integration-test.xml</changeLogFile>
                                        <skip>${skipUpgradeLiquibase}</skip>
                                        <logging>warning</logging>
                                    </configuration>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>update</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                </plugins>
            </build>
        </profile>


    </profiles>
</project>
