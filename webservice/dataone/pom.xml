<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>dataone</artifactId>
    <packaging>war</packaging>
    <name>tDAR (DataOne)</name>

    <properties>
        <skipJetty>false</skipJetty>
        <skipTestLiquibase>false</skipTestLiquibase>
    </properties>
    <parent>
        <groupId>org.tdar</groupId>
        <artifactId>web-base</artifactId>
        <version>18.3.1-SNAPSHOT</version>
        <relativePath>../../web-base/pom.xml</relativePath>
    </parent>
    <organization>
        <name>The Digital Archaeological Record</name>
        <url>http://www.tdar.org</url>
    </organization>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.apache.jena</groupId>
                <artifactId>jena-arq</artifactId>
                <version>4.4.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.jena</groupId>
                <artifactId>jena-core</artifactId>
                <version>4.4.0</version>
            </dependency>
            <dependency>
                <groupId>org.jibx</groupId>
                <artifactId>jibx-run</artifactId>
                <version>1.2.5</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>1.7</version>
            </dependency>
            <dependency>
                <groupId>com.github.jsonld-java</groupId>
                <artifactId>jsonld-java</artifactId>
                <version>0.13.4</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
            <repository>
            <id>dataone.org</id>
            <url>https://maven.dataone.org/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- 3rd party dependencies and libraries -->
    <dependencies>
        <dependency>
            <groupId>org.tdar</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>owlapi-apibinding</artifactId>
                    <groupId>net.sourceforge.owlapi</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>rome</artifactId>
                    <groupId>rome</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-rt-rs-client</artifactId>
                </exclusion>
             </exclusions>
        </dependency>
        <dependency>
            <groupId>org.tdar</groupId>
            <artifactId>base</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.tdar</groupId>
            <artifactId>web-test</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>rome</artifactId>
                    <groupId>rome</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>owlapi-apibinding</artifactId>
                    <groupId>net.sourceforge.owlapi</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.tdar</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- declared dependency with excludes for DataOne and maven 
                version management -->
                <!-- https://mvnrepository.com/artifact/org.apache.jcs/jcs -->
            <groupId>org.apache.jcs</groupId>
            <artifactId>jcs</artifactId>
            <version>1.3</version>
            <!-- APACHE 2.0 License -->
            <exclusions>
                <exclusion>
                    <artifactId>hsqldb</artifactId>
                    <groupId>hsqldb</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                    <groupId>javax.servlet</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>xercesImpl</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-beanutils-core</artifactId>
                    <groupId>commons-beanutils</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <!-- LICENSE: CDDL / GPL 2.0 -->
            <exclusions>
                <exclusion>
                    <groupId>javax.validation</groupId>
                    <artifactId>validation-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring4</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>bean-validator</artifactId>
                    <groupId>org.glassfish.hk2.external</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>hibernate-validator</artifactId>
                    <groupId>org.hibernate</groupId>
                </exclusion>
            </exclusions>
        </dependency>
         <dependency>
            <groupId>org.dataone</groupId>
            <artifactId>d1_libclient_java</artifactId>
            <version>2.3.1</version>
            <type>jar</type>
            <!-- LICENSE: APACHE 2.0 -->
            <exclusions>
                <exclusion>
                    <artifactId>httpclient</artifactId>
                    <groupId>org.apache.httpcomponents</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>httpmime</artifactId>
                    <groupId>org.apache.httpcomponents</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>httpcore</artifactId>
                    <groupId>org.apache.httpcomponents</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                    <groupId>javax.servlet</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>foresite</artifactId>
                    <groupId>com.googlecode.foresite-toolkit</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcpkix-jdk15on</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-pool</groupId>
                    <artifactId>commons-pool</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-collections4</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-utils</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>jta</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>classworlds</groupId>
                    <artifactId>classworlds</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- declared dependency with excludes for DataOne and maven version management -->
            <artifactId>foresite</artifactId>
            <groupId>org.digitalantiquity.foresite-toolkit</groupId>
            <version>0.2</version>
            <exclusions>
<!--                  <exclusion>
                    <artifactId>jena</artifactId>
                    <groupId>com.hp.hpl.jena</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>rome</artifactId>
                    <groupId>rome</groupId>
                </exclusion>
 -->                <exclusion>
                    <artifactId>joda-time</artifactId>
                    <groupId>joda-time</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>xalan</artifactId>
                    <groupId>xalan</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>                
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>tdar-dataone</finalName>
        <resources>
            <!-- We only want a small set of files to be filtered. NOTE: These files 
                are NOT read into maven properties for interpolation, they are just the set 
                of files where any interpolated variables will be rewritten according to 
                the currently loaded set of maven properties. To define interpolated variables, 
                the file or variable has to be added to <filters></filters> XXX: only files 
                that need to be rewritten should be included here -->
            <resource>
                <!-- switch filtering off for all but the desired set -->
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>tdar.properties</exclude>
                    <exclude>crowd.properties</exclude>
                    <exclude>hibernate.properties</exclude>
                    <exclude>common.json</exclude>
                    <exclude>liquibase.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <!-- And on for the set of files -->
                <!-- Having to do it as mutually exclusive but that's how Maven works -->
                <!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html -->
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>tdar.properties</include>
                    <include>crowd.properties</include>
                    <include>hibernate.properties</include>
                    <include>dataone.properties</include>
                    <include>common.json</include>
                    <include>liquibase.properties</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/main/webapp</directory>
                <filtering>true</filtering>
            </testResource>
            <!-- <testResource> <directory>src/main/resources</directory> <filtering>true</filtering> 
                </testResource> -->
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-version}</version>
                <configuration>
                    <!-- <webappDirectory>${webapp.deploy.dir}</webappDirectory> -->
                    <!-- <outputDirectory>${webapp.deploy.dir}</outputDirectory> -->
                    <!--<webXml>${webXmlPath}</webXml> -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-failsafe.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/experimental/*.java</exclude>
                    </excludes>
                    <skip>${maven.test.skip}</skip>
                    <runOrder>alphabetical</runOrder>
                    <systemProperties>
                        <property>
                            <name>maven.version</name>
                            <value>${maven.version}</value>
                        </property>
                        <property>
                            <name>maven.home</name>
                            <value>${preparedMavenHome}</value>
                        </property>
                        <property>
                            <name>maven.it.global-settings.dir</name>
                            <value>${project.build.testOutputDirectory}</value>
                        </property>
                    </systemProperties>
                    <!-- <includes> <include>**/*ITCase.java</include> <include>**/*TestCase.java</include> 
                        </includes> -->
                    <argLine>${jvm.args}
                        -DenableContextSwitchingConfig=true</argLine>
                    <junitArtifactName>junit:junit-dep</junitArtifactName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-failsafe.version}</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
                            <reportsDirectory>target/failsafe-reports/</reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <runOrder>alphabetical</runOrder>
                    <systemPropertyVariables>
                        <display.port>${display.port}</display.port>
                    </systemPropertyVariables>
                    <argLine>${jvm.args}
                        -DenableContextSwitchingConfig=true</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>test</id>
            <build>
                <defaultGoal>surefire:test</defaultGoal>
                <filters>
                    <filter>src/test/resources/hibernate.properties</filter>
                    <filter>src/main/resources/liquibase.properties</filter>
                </filters>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.1.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>src/test/resources/hibernate.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <jetty.port>8180</jetty.port>
                <jetty.ssl.port>8143</jetty.ssl.port>
                <jetty.stop.port>12920</jetty.stop.port>
            </properties>
        </profile>


        <profile>
            <id>setup-new-instance</id>
            <build>
                <defaultGoal>process-resources</defaultGoal>
                <plugins>
                    <plugin>
                        <artifactId>maven-remote-resources-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>process-resources</id>
                                <goals>
                                    <goal>process</goal>
                                </goals>
                                <configuration>
                                    <attachToTest>true</attachToTest>
                                    <attachToMain>true</attachToMain>
                                    <outputDirectory>${project.build.directory}/templates</outputDirectory>
                                    <resourceBundles>
                                        <resourceBundle>org.tdar:templates:${project.version}</resourceBundle>
                                    </resourceBundles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <copy failOnError="false" file="target/templates/crowd.properties.template" tofile="src/main/resources/crowd.properties" />
                                        <copy failOnError="false" file="target/templates/ldap.properties.template" tofile="src/main/resources/ldap.properties" />
                                        <copy file="target/templates/hibernate.properties.template" tofile="src/main/resources/hibernate.properties" />
                                        <copy file="target/templates/log4j2.xml.template" tofile="src/main/resources/log4j2.xml" />
                                        <copy failOnError="false" file="target/templates/dataOne.properties.template" tofile="src/main/resources/dataOne.properties" />
                                        <copy file="target/templates/spring-local-settings.xml.template" tofile="src/main/resources/spring-local-settings.xml" />
                                        <copy failOnError="false" file="target/templates/hibernate-ehcache.xml.template" tofile="src/main/resources/hibernate-ehcache.xml" />
                                        <echo message="the following can be used to grab all of the config files into a tar from an existing repo" />
                                        <echo message=" hg status --all | grep 'I ' | grep -v 'I target/' | awk '{print substr($0, index($0, $2))}' | tar -cvzf ../backup.tgz -T -" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
